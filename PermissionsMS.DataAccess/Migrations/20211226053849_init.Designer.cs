// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PermissionsMS.DataAccess;

namespace PermissionsMS.DataAccess.Migrations
{
    [DbContext(typeof(PermissionsContext))]
    [Migration("20211226053849_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PermissionsMS.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeForename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("date");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PermissionType");

                    b.HasKey("Id");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeForename = "Matías",
                            EmployeeSurname = "Salinas",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 2,
                            EmployeeForename = "Jose Luís",
                            EmployeeSurname = "Fernández",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 3,
                            EmployeeForename = "Rodrigo",
                            EmployeeSurname = "Lago",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            EmployeeForename = "Lucas",
                            EmployeeSurname = "Olivera",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 5,
                            EmployeeForename = "Camilo",
                            EmployeeSurname = "Ñañez",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            EmployeeForename = "Waldo",
                            EmployeeSurname = "Hasperué",
                            PermissionDate = new DateTime(2021, 12, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            PermissionTypeId = 1
                        });
                });

            modelBuilder.Entity("PermissionsMS.Entities.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Project Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Scrum Master"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Product Owner"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Developer"
                        });
                });

            modelBuilder.Entity("PermissionsMS.Entities.Permission", b =>
                {
                    b.HasOne("PermissionsMS.Entities.PermissionType", "PermissionType")
                        .WithMany("Permissions")
                        .HasForeignKey("PermissionTypeId")
                        .IsRequired();

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("PermissionsMS.Entities.PermissionType", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
